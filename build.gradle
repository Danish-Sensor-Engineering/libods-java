plugins {
    id 'java-library'
    id 'groovy'
    id 'jacoco'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    api('com.fazecast:jSerialComm:[2.0.0,3.0.0)')
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
	testRuntimeOnly("org.slf4j:slf4j-simple:${slf4jVersion}")
    testImplementation("org.spockframework:spock-core:${spockVersion}")
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Danish-Sensor-Engineering/libsensor")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    group = "verification"
    reports {
        xml.required = false
        csv.required = false
        html.destination file("${buildDir}/reports/coverage")
    }
}
test.finalizedBy jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            includes = [
                'dse.libsensor.TelegramHandler16Bit',
                'dse.libsensor.TelegramHandler18Bit'
            ]
            limit { // See: https://www.eclemma.org/jacoco/trunk/doc/counters.html
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification
