plugins {
    id 'java-library'
    id 'groovy'
    id 'jacoco'
    id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api('com.fazecast:jSerialComm:[2.0.0,3.0.0)')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")

    runtimeOnly("org.slf4j:slf4j-simple:${slf4jVersion}")

    // Use the latest Groovy version for Spock testing
	testRuntimeOnly("org.slf4j:slf4j-simple:${slf4jVersion}")
    testImplementation("org.codehaus.groovy:groovy-all:${groovyVersion}")

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation("org.spockframework:spock-core:${spockVersion}")
    testImplementation('junit:junit:4.12')
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}


test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
/*
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    configurations = ['archives']
    pkg {
        repo = "libs"
        name = "libsensor"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = licenses
        publish = true
    }
}
*/

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    group = "verification"
    reports {
        xml.required = false
        csv.required = false
        html.destination file("${buildDir}/reports/coverage")
    }
}
test.finalizedBy jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            includes = [
                'biz.nellemann.libsensor.TelegramHandler16Bit',
                'biz.nellemann.libsensor.TelegramHandler18Bit'
            ]
            limit { // See: https://www.eclemma.org/jacoco/trunk/doc/counters.html
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification
